<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!--配置自动扫描的包 -->
	<context:component-scan base-package="com.david.springmvc.restful"></context:component-scan>
	<!--配置视图解析器，如何把handler方法返回值解析为实际的物理视图 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/restful/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!--配置国际化资源文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n"></property>
	</bean>
	<!-- <mvc:view-controller path="/i18n" view-name="i18n"/> -->
	<mvc:view-controller path="/i18n2" view-name="i18n2"/>
	<!--springMVC处理静态资源的方式 -->
	<!-- <mvc:default-servlet-handler/> 将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler，它会对进入 
		DispatcherServlet 的 请求进行筛查，如果发现是没有经过映射的请求，就将该请求交由 WEB 应用服务器默认的 Servlet 处理，如果不是静态资源的请求，才由 
		DispatcherServlet 继续处理 -->
	<mvc:default-servlet-handler />
	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
	<!--conversion-service="conversionService" -->

	<!--配置ConversionService -->
	<!-- <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean" 
		> -->
	<!--org.springframework.format.support.FormattingConversionServiceFactoryBean 
		使用这个class既可以使用@DateTimeFormat注解的格式转换，也可以使用自定义的类型转换器 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<!--这个employeeConverter bean通过注解加入容器的 -->
				<ref bean="employeeConverter" />
			</set>
		</property>
	</bean>
	
	<!--一下2个是配置通过超链接的方式切换国际化资源-->
	<!--配置SessionLocaleResolver-->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
	<!-- 配置localeChangeInterceptor -->
	<mvc:interceptors>
		<!--配置自定义的拦截器-->
		<bean class="com.david.springmvc.interceptor.FirstInterceptor"></bean>
		<!--配置拦截器作用的请求路径
			<mvc:mapping path="/emps"/> 只包含
			<mvc:exclude-mapping path=""/> 不包含
		-->
		<mvc:interceptor>
			
			<mvc:mapping path="/emps"/>
			<bean class="com.david.springmvc.interceptor.SecondInterceptor">
				
			</bean>
		</mvc:interceptor>
		
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"></bean>
	</mvc:interceptors>
	
	
	<!--文件上传配置-->
	<context:component-scan base-package="com.david.springmvc.file"></context:component-scan>
	<!--MultipartResolver 其中CommonsMultipartResolver 是该接口的一个实现类 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="1024000"></property>
		
	</bean>
	
</beans>
